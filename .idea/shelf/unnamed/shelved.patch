Index: app/src/main/java/demo/app/com/app2/homeFragment/HomeFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package demo.app.com.app2.homeFragment;\n\nimport android.app.Activity;\nimport android.content.Context;\nimport android.content.DialogInterface;\nimport android.support.annotation.Nullable;\nimport android.support.design.widget.CoordinatorLayout;\nimport android.support.design.widget.FloatingActionButton;\nimport android.support.design.widget.Snackbar;\nimport android.support.v4.app.FragmentManager;\nimport android.support.v4.app.FragmentTransaction;\nimport android.support.v7.app.AlertDialog;\nimport android.support.v7.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.support.v7.widget.DefaultItemAnimator;\nimport android.support.v7.widget.LinearLayoutManager;\nimport android.support.v7.widget.RecyclerView;\nimport android.support.v7.widget.helper.ItemTouchHelper;\nimport android.util.Log;\nimport android.view.View;\nimport android.view.animation.AnimationUtils;\nimport android.view.animation.LayoutAnimationController;\nimport android.widget.LinearLayout;\nimport android.widget.TextView;\n\nimport com.google.gson.Gson;\n\nimport java.util.ArrayList;\n\nimport butterknife.BindView;\nimport demo.app.com.app2.AppContext;\nimport demo.app.com.app2.BaseFragment;\nimport demo.app.com.app2.helper.RecyclerItemTouchHelper;\nimport demo.app.com.app2.listeners.BackPressCallback;\nimport demo.app.com.app2.listeners.SearchCallback;\nimport demo.app.com.app2.mainActivity.MainActivity;\nimport demo.app.com.app2.receivers.AlarmReceiver;\nimport demo.app.com.app2.R;\nimport demo.app.com.app2.adapters.AllItemsAdapter;\nimport demo.app.com.app2.database.dataSource.ClientInfoDataSource;\nimport demo.app.com.app2.detailsFragment.DetailFragment;\nimport demo.app.com.app2.helper.ApplicationHelper;\nimport demo.app.com.app2.listeners.ViewCallback;\nimport demo.app.com.app2.models.ClientInfo;\nimport demo.app.com.app2.utils.ApplicationUtils;\n\npublic class HomeFragment extends BaseFragment<HomeFragmentPresenter> implements HomeFragmentContract.View,View.OnClickListener,ViewCallback, RecyclerItemTouchHelper.RecyclerItemTouchHelperListener {\n\n   private static final String TAG = HomeFragment.class.getSimpleName();\n\n    ClientInfoDataSource    clientInfoDataSource;\n\n    private AppCompatActivity mActivity;\n    private AlarmReceiver alarmReceiver;\n\n    @BindView(R.id.layout_no_data)        LinearLayout         layoutNoData;\n    @BindView(R.id.layout_home)           LinearLayout         layoutHome;\n    @BindView(R.id.txt_make_entry)        TextView             txtMakeEntry;\n    @BindView(R.id.rec_all_items)         RecyclerView         recAllItems;\n    private LinearLayoutManager           mLinearLayoutManager;\n\n\n    private ArrayList<ClientInfo> clientInfos;\n    private FloatingActionButton  actionButton;\n    private AllItemsAdapter       itemsAdapter;\n    private MainActivity          mainActivity;\n    private CoordinatorLayout     coordinatorLayout;\n    private boolean isSwiped  = false;\n    private String                mName;\n    private Snackbar              snackbar;\n    private ClientInfo deletedItem;\n    private int deletedIndex;\n\n\n\n    @Override\n    public void onAttach(Activity activity) {\n        super.onAttach(activity);\n        this.mActivity = (AppCompatActivity) activity;\n\n\n    }\n\n    @Override\n    protected int getLayout() {\n        return R.layout.fragment_home;\n    }\n\n\n    @Override\n    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n\n        FragmentManager fm = getFragmentManager(); // or 'getSupportFragmentManager();'\n        int count = fm.getBackStackEntryCount();\n        for(int i = 0; i < count; ++i) {\n            fm.popBackStack();\n            //fm.popBackStackImmediate();\n\n        }\n\n        initResources();\n\n    }\n\n    private void initResources() {\n\n        mainActivity = new MainActivity();\n\n        actionButton = (FloatingActionButton) mActivity.findViewById(R.id.fab);\n\n        actionButton.setVisibility(View.VISIBLE );\n\n        coordinatorLayout = (CoordinatorLayout) mActivity.findViewById(R.id.coordinator_layout);\n\n        clientInfoDataSource = new ClientInfoDataSource(AppContext.getInstance());\n\n        if(clientInfoDataSource != null){\n            clientInfoDataSource.open();\n\n            clientInfos = clientInfoDataSource.getAllClientInfo();\n\n            clientInfoDataSource.close();\n\n\n        }\n\n        mLinearLayoutManager = new LinearLayoutManager(AppContext.getInstance());\n        recAllItems.setLayoutManager(mLinearLayoutManager);\n        recAllItems.setNestedScrollingEnabled(false);\n        recAllItems.setItemAnimator(new DefaultItemAnimator());\n        mLinearLayoutManager.setReverseLayout(true);\n        mLinearLayoutManager.setStackFromEnd(true);\n        runLayoutAnimation(recAllItems);\n\n        addEmptyAdapterToRecyclerView(recAllItems, clientInfos);\n\n        txtMakeEntry.setOnClickListener(this);\n        actionButton.setOnClickListener(this);\n\n        mainActivity.setmListener(new SearchCallback() {\n            @Override\n            public void searchByName(String name) {\n                mName = name;\n                if(itemsAdapter != null) {\n                    itemsAdapter.getFilter().filter(name);\n                }else {\n                    ApplicationUtils.hideKeypad(mActivity,coordinatorLayout);\n                    AlertDialog.Builder builder = new AlertDialog.Builder(mActivity);\n                    builder.setTitle(getResources().getString(R.string.lbl_error));\n                    builder.setMessage(getResources().getString(R.string.lbl_no_data_dialog_message));\n                    builder.setPositiveButton(getResources().getString(R.string.lbl_ok),\n                            new DialogInterface.OnClickListener(){\n                                @Override\n                                public void onClick(DialogInterface dialog, int which) {\n\n                                   dialog.cancel();\n                                   dialog.dismiss();\n                                }\n                            });\n\n                    builder.show();\n\n                }\n            }\n        });\n\n        ItemTouchHelper.SimpleCallback itemTouchHelperCallback = new RecyclerItemTouchHelper(0, ItemTouchHelper.LEFT , this);\n        new ItemTouchHelper(itemTouchHelperCallback).attachToRecyclerView(recAllItems);\n}\n\n\n    private void runLayoutAnimation(final RecyclerView recyclerView) {\n        final Context context = recyclerView.getContext();\n        final LayoutAnimationController controller =\n                AnimationUtils.loadLayoutAnimation(context, R.anim.layout_animation_from_bottom);\n\n        recyclerView.setLayoutAnimation(controller);\n        ///recyclerView.getAdapter().notifyDataSetChanged();\n        recyclerView.scheduleLayoutAnimation();\n    }\n\n\n    private void addEmptyAdapterToRecyclerView(RecyclerView recAllItems, ArrayList<ClientInfo> clientInfos) {\n\n        if(clientInfos != null && clientInfos.size() > 0){\n            layoutNoData.setVisibility(View.GONE);\n            recAllItems.setVisibility(View.VISIBLE);\n\n            itemsAdapter = new AllItemsAdapter(mActivity,AppContext.getInstance(), clientInfos,this,clientInfoDataSource);\n            recAllItems.setAdapter(itemsAdapter);\n            itemsAdapter.notifyDataSetChanged();\n        }else{\n\n            layoutNoData.setVisibility(View.VISIBLE);\n            recAllItems.setVisibility(View.GONE);\n\n        }\n\n    }\n\n\n    @Override\n    public ApplicationHelper getHelper() {\n        return ApplicationHelper.getInstance();\n    }\n\n\n\n    @Override\n    protected HomeFragmentPresenter getPresenter() {\n        return new HomeFragmentPresenter(this);\n    }\n\n    public void navigateToDetails(){\n\n        FragmentTransaction fragmentTransaction = getActivity().getSupportFragmentManager().beginTransaction();\n        DetailFragment fragment = new DetailFragment();\n        Bundle data = new Bundle();\n        data.putBoolean(\"fromHomeFragment\", false);\n        fragment.setArguments(data);\n        FragmentManager fm = getActivity()\n                .getSupportFragmentManager();\n        fm.popBackStack (null, FragmentManager.POP_BACK_STACK_INCLUSIVE);\n        fragmentTransaction.setCustomAnimations(R.anim.enter_from_left, R.anim.exit_to_right, R.anim.enter_from_right, R.anim.exit_to_left);\n        fragmentTransaction.replace(R.id.frame_layout_main, fragment);\n        fragmentTransaction.addToBackStack(null);\n        fragmentTransaction.commitAllowingStateLoss();\n\n\n    }\n\n    @Override\n    public void onClick(View view) {\n\n        if(view == actionButton){\n\n            navigateToDetails();\n\n            }\n        }\n\n    @Override\n    public void editData(ClientInfo clientInfo) {\n\n        FragmentTransaction fragmentTransaction = getActivity().getSupportFragmentManager().beginTransaction();\n        DetailFragment fragment = new DetailFragment();\n        Bundle data = new Bundle();\n        Gson gson = new Gson();\n        String json = gson.toJson(clientInfo);\n        data.putString(\"clientObj\", json);\n        data.putBoolean(\"fromHomeFragment\",true);\n        fragment.setArguments(data);\n        FragmentManager fm = getActivity()\n                .getSupportFragmentManager();\n        fm.popBackStack (null, FragmentManager.POP_BACK_STACK_INCLUSIVE);\n        fragmentTransaction.replace(R.id.frame_layout_main, fragment);\n        fragmentTransaction.addToBackStack(null);\n        fragmentTransaction.commitAllowingStateLoss();\n    }\n\n    @Override\n    public void deleteData(int position) {\n\n        if(isVisible()) {\n            if (clientInfos != null && clientInfos.size() > 0) {\n\n                layoutNoData.setVisibility(View.GONE);\n                recAllItems.setVisibility(View.VISIBLE);\n\n            } else {\n\n                layoutNoData.setVisibility(View.VISIBLE);\n                recAllItems.setVisibility(View.GONE);\n            }\n\n        }\n\n    }\n\n    @Override\n    public void noData(int count) {\n\n        if(count == 0){\n\n            layoutNoData.setVisibility(View.VISIBLE);\n            recAllItems.setVisibility(View.GONE);\n\n        }else {\n\n            layoutNoData.setVisibility(View.GONE);\n            recAllItems.setVisibility(View.VISIBLE);\n\n        }\n    }\n\n    @Override\n    public void onPause() {\n        super.onPause();\n\n        if(isSwiped){\n\n            Log.e(TAG, \"onDismissed: manually dismissed\" );\n            itemsAdapter.removeItemFromDb(deletedItem,deletedIndex);\n            actionButton.setVisibility(View.VISIBLE );\n            isSwiped = false;\n        }\n    }\n\n    @Override\n    public void onSwiped(RecyclerView.ViewHolder viewHolder, int direction, int position) {\n\n        if (viewHolder instanceof AllItemsAdapter.ListItemViewHolder) {\n\n            String name = clientInfos.get(viewHolder.getAdapterPosition()).getClientName();\n\n            deletedItem = clientInfos.get(viewHolder.getAdapterPosition());\n\n            deletedIndex = viewHolder.getAdapterPosition();\n\n            if (direction == ItemTouchHelper.LEFT) {\n\n                isSwiped = true;\n\n                itemsAdapter.removeItem(deletedItem,deletedIndex);\n\n            }\n\n            Snackbar.make(getView(), \"Client name : \"+ name.toLowerCase() + \" is deleted!\", Snackbar.LENGTH_LONG).setCallback( new Snackbar.Callback() {\n                @Override\n                public void onDismissed(Snackbar snackbar, int event) {\n                    switch(event) {\n                        case Snackbar.Callback.DISMISS_EVENT_SWIPE:\n\n                            Log.e(TAG, \"onDismissed: event swipe\" );\n                            itemsAdapter.removeItemFromDb(deletedItem,deletedIndex);\n                            actionButton.setVisibility(View.VISIBLE );\n                            isSwiped = false;\n\n                            break;\n\n                        case Snackbar.Callback.DISMISS_EVENT_TIMEOUT:\n\n                            Log.e(TAG, \"onDismissed: time out\" );\n                            itemsAdapter.removeItemFromDb(deletedItem,deletedIndex);\n                            actionButton.setVisibility(View.VISIBLE );\n                            isSwiped = false;\n\n                            break;\n\n                        case Snackbar.Callback.DISMISS_EVENT_CONSECUTIVE:\n\n                            Log.e(TAG, \"onDismissed: event consective\" );\n                            itemsAdapter.removeItemFromDb(deletedItem,deletedIndex);\n                            actionButton.setVisibility(View.VISIBLE );\n                            isSwiped = false;\n\n                            break;\n\n                        case Snackbar.Callback.DISMISS_EVENT_MANUAL:\n\n                            Log.e(TAG, \"onDismissed: manually dismissed\" );\n                            itemsAdapter.removeItemFromDb(deletedItem,deletedIndex);\n                            actionButton.setVisibility(View.VISIBLE );\n                            isSwiped = false;\n\n                            break;\n\n                    }\n                }\n\n                @Override\n                public void onShown(Snackbar snackbar) {\n\n                    actionButton.setVisibility(View.GONE );\n\n                }\n            }).setAction(\"UNDO\", new View.OnClickListener() {\n                @Override\n                public void onClick(View v) {\n\n                    itemsAdapter.restoreItem(deletedItem,deletedIndex);\n                    actionButton.setVisibility(View.VISIBLE );\n                    isSwiped = false;\n\n                }\n            }).show();\n\n\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/demo/app/com/app2/homeFragment/HomeFragment.java	(revision 03a4d74868f446cd8512d5db86d56780d91d565f)
+++ app/src/main/java/demo/app/com/app2/homeFragment/HomeFragment.java	(revision )
@@ -24,6 +24,7 @@
 import android.widget.TextView;
 
 import com.google.gson.Gson;
+import com.jackandphantom.blurimage.BlurImage;
 
 import java.util.ArrayList;
 
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\n\nandroid {\n    compileSdkVersion 26\n    defaultConfig {\n        applicationId \"demo.app.com.app2\"\n        minSdkVersion 15\n        targetSdkVersion 26\n        versionCode 2\n        versionName \"1.1\"\n        testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\n    }\n\n    signingConfigs {\n        debug {\n            keyAlias 'androiddebugkey'\n            keyPassword 'android'\n            storeFile file('../keystoreDebug/debug.keystore')\n            storePassword 'android'\n        }\n        release {\n            keyAlias 'clientmanagement'\n            keyPassword KEY_PASSWORD\n            storeFile file('../keystoreRelease/clientmanagement.jks')\n            storePassword KEYSTORE_PASSWORD\n        }\n    }\n\n    buildTypes {\n\n        debug {\n            debuggable      true\n            minifyEnabled   false\n            shrinkResources false\n            zipAlignEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n            signingConfig signingConfigs.debug\n        }\n\n        release {\n            debuggable      false\n            minifyEnabled   true\n            shrinkResources true\n            zipAlignEnabled true\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n            signingConfig signingConfigs.release\n        }\n    }\n\n    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_1_8\n        targetCompatibility JavaVersion.VERSION_1_8\n    }\n}\n\ndependencies {\n    implementation fileTree(include: ['*.jar'], dir: 'libs')\n    implementation 'com.android.support:appcompat-v7:26.1.0'\n    implementation 'com.android.support.constraint:constraint-layout:1.0.2'\n    implementation 'com.android.support:design:26.1.0'\n    testImplementation 'junit:junit:4.12'\n    androidTestImplementation 'com.android.support.test:runner:1.0.1'\n    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'\n    compile 'com.android.support:recyclerview-v7:26.1.0'\n    compile 'com.android.support:cardview-v7:26.1.0'\n    compile 'com.google.dagger:dagger:2.13'\n    annotationProcessor 'com.google.dagger:dagger-compiler:2.13'\n    annotationProcessor 'com.google.dagger:dagger-android-processor:2.13'\n    compile 'com.google.dagger:dagger-android-support:2.13'\n    compile 'com.jakewharton:butterknife:8.0.1'\n    annotationProcessor 'com.jakewharton:butterknife-compiler:8.0.1'\n    compile 'com.android.support:multidex:1.0.0'\n    compile 'com.intuit.sdp:sdp-android:1.0.4'\n    compile 'com.google.code.gson:gson:2.8.0'\n    compile 'com.airbnb.android:lottie:1.5.3'\n    compile 'uk.co.chrisjenx:calligraphy:2.2.0'\n    compile 'com.github.hotchemi:permissionsdispatcher:2.3.1'\n    annotationProcessor 'com.github.hotchemi:permissionsdispatcher-processor:2.3.1'\n    implementation files('libs/activation.jar')\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision 03a4d74868f446cd8512d5db86d56780d91d565f)
+++ app/build.gradle	(revision )
@@ -9,6 +9,8 @@
         versionCode 2
         versionName "1.1"
         testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
+
+        renderscriptSupportModeEnabled true
     }
 
     signingConfigs {
@@ -76,5 +78,6 @@
     compile 'uk.co.chrisjenx:calligraphy:2.2.0'
     compile 'com.github.hotchemi:permissionsdispatcher:2.3.1'
     annotationProcessor 'com.github.hotchemi:permissionsdispatcher-processor:2.3.1'
+    compile 'com.jackandphantom.android:blurimage:1.2.0'
     implementation files('libs/activation.jar')
 }
Index: app/src/main/java/demo/app/com/app2/adapters/AllItemsAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package demo.app.com.app2.adapters;\n\nimport android.app.Activity;\nimport android.app.Dialog;\nimport android.content.Context;\nimport android.content.DialogInterface;\nimport android.graphics.Bitmap;\nimport android.graphics.Canvas;\nimport android.graphics.Color;\nimport android.graphics.ColorFilter;\nimport android.graphics.LightingColorFilter;\nimport android.graphics.Matrix;\nimport android.graphics.Paint;\nimport android.graphics.PorterDuff;\nimport android.graphics.PorterDuffXfermode;\nimport android.graphics.Rect;\nimport android.os.Build;\nimport android.renderscript.RenderScript;\nimport android.support.annotation.RequiresApi;\nimport android.support.v4.app.FragmentTransaction;\nimport android.support.v7.app.AlertDialog;\nimport android.support.v7.widget.CardView;\nimport android.support.v7.widget.RecyclerView;\nimport android.text.TextUtils;\nimport android.util.Log;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.view.Window;\nimport android.widget.Button;\nimport android.widget.Filter;\nimport android.widget.Filterable;\nimport android.widget.ImageView;\nimport android.widget.LinearLayout;\nimport android.widget.RelativeLayout;\nimport android.widget.TextView;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Random;\n\nimport butterknife.BindView;\nimport butterknife.ButterKnife;\nimport demo.app.com.app2.AppContext;\nimport demo.app.com.app2.R;\nimport demo.app.com.app2.database.dataSource.ClientInfoDataSource;\nimport demo.app.com.app2.detailsFragment.DetailFragment;\nimport demo.app.com.app2.helper.ApplicationHelper;\nimport demo.app.com.app2.helper.HelperInterface;\nimport demo.app.com.app2.helper.ImageHelper;\nimport demo.app.com.app2.homeFragment.HomeFragment;\nimport demo.app.com.app2.listeners.ViewCallback;\nimport demo.app.com.app2.models.ClientInfo;\nimport demo.app.com.app2.utils.ApplicationUtils;\nimport demo.app.com.app2.utils.ObjectUtils;\n\n/**\n * Created by root on 26/12/17.\n */\n\npublic class AllItemsAdapter extends RecyclerView.Adapter<AllItemsAdapter.ListItemViewHolder>\n        implements HelperInterface,Filterable {\n\n    private static final String TAG = AllItemsAdapter.class.getSimpleName();\n    private Activity activity;\n    private Context context;\n    private boolean isDataExpanded = false;\n    private static ViewCallback viewSelectionCallback;\n    private ArrayList<ClientInfo> clientInfosList = new ArrayList<>();\n    private List<ClientInfo> clientListFiltered;\n    private ClientInfoDataSource  clientInfoDataSource;\n    public LinearLayout linearLayoutCard;\n    private int mClickedPosition ;\n    private Bitmap mBitmap1 = null;\n    private Bitmap mBlurredBitmap = null;\n    private RenderScript rs;\n\n    public AllItemsAdapter(Activity activity,Context context, ArrayList<ClientInfo> clientInfosList,ViewCallback viewSelectionCallback,ClientInfoDataSource clientInfoDataSource) {\n\n        this.activity             = activity;\n        this.context              = context;\n        this.clientInfosList      = clientInfosList;\n        this.viewSelectionCallback=viewSelectionCallback;\n        this.clientInfoDataSource = clientInfoDataSource;\n        this.clientListFiltered   = clientInfosList;\n    }\n    @Override\n    public AllItemsAdapter.ListItemViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        View itemView = LayoutInflater.from(parent.getContext()).inflate(R.layout.adapter_all_items, parent, false);\n        return new ListItemViewHolder(itemView);\n    }\n\n    @RequiresApi(api = Build.VERSION_CODES.JELLY_BEAN_MR1)\n    @Override\n    public void onBindViewHolder(AllItemsAdapter.ListItemViewHolder holder, int position) {\n\n        if (clientListFiltered!= null && clientListFiltered.size() > 0\n                && ObjectUtils.indexExists(clientListFiltered, position)) {\n\n            rs = RenderScript.create(AppContext.getInstance());\n\n            mBitmap1 = loadBitmap(holder.imgBus , holder.viewBackground);\n\n            mClickedPosition = position;\n\n            ClientInfo info = clientListFiltered.get(position);\n\n            if(info != null){\n\n                String name        = info.getClientName().trim();\n                String scriptName  = info.getScriptName().trim();\n\n\n                if(!TextUtils.isEmpty(name) && !name.equalsIgnoreCase(\"SELECT\")){\n\n                    holder.txtClientName.setText(name);\n\n                }\n\n                if(!TextUtils.isEmpty(scriptName) && !scriptName.equalsIgnoreCase(\"SELECT\")){\n\n                    holder.txtScriptName.setText(scriptName);\n\n                }\n\n\n                    if (!TextUtils.isEmpty(info.getQuantity().trim())) {\n\n                        holder.layoutQuantity.setVisibility(View.VISIBLE);\n                        holder.txtQuantity.setText(info.getQuantity().trim());\n\n                    } else {\n\n                        holder.layoutQuantity.setVisibility(View.GONE);\n                        holder.txtQuantity.setText(\"-\");\n                    }\n\n                    if (!TextUtils.isEmpty(info.getSegments().trim())) {\n\n                        holder.layoutSegments.setVisibility(View.VISIBLE);\n                        holder.txtSegments.setText(info.getSegments().trim());\n\n                    } else {\n                        holder.layoutSegments.setVisibility(View.GONE);\n                        holder.txtSegments.setText(\"-\");\n                    }\n\n                    if (!TextUtils.isEmpty(info.getBuyDate().trim())) {\n\n                        holder.layoutBuyDate.setVisibility(View.VISIBLE);\n                        holder.txtBuyDate.setText(info.getBuyDate().trim());\n\n                    } else {\n\n                        holder.layoutBuyDate.setVisibility(View.GONE);\n                        holder.txtBuyDate.setText(\"-\");\n                    }\n\n                    if(info.getShareStatus() != null && info.getShareStatus().trim().length() > 0){\n\n                        holder.layoutShareStatus.setVisibility(View.VISIBLE);\n                        holder.txtShareStatus.setText(info.getShareStatus().trim());\n\n                    } else {\n                        holder.layoutShareStatus.setVisibility(View.GONE);\n                        holder.txtShareStatus.setText(\"-\");\n                    }\n\n\n                    if (!TextUtils.isEmpty(info.getSoldDate())) {\n\n                        Log.e(TAG, \"onBindViewHolder: \"+info.getSoldDate() );\n\n                        holder.layoutSolddate.setVisibility(View.VISIBLE);\n                        holder.txtSoldDate.setText(info.getSoldDate().trim());\n\n                    } else {\n                        holder.layoutSolddate.setVisibility(View.GONE);\n                        holder.txtSoldDate.setText(\"-\");\n                    }\n\n                    if (!TextUtils.isEmpty(info.getSoldPrice())) {\n\n                        Log.e(TAG, \"onBindViewHolder: \"+info.getSoldPrice() );\n\n\n                        holder.layoutSoldPrice.setVisibility(View.VISIBLE);\n                        holder.txtSoldPrice.setText(activity.getResources().getString(R.string.rupee_icon) + \" \"+info.getSoldPrice().trim());\n\n                    } else {\n\n                        holder.layoutSoldPrice.setVisibility(View.GONE);\n                        holder.txtSoldPrice.setText(\"-\");\n                    }\n\n                    if (!TextUtils.isEmpty(info.getBuyPrice())) {\n\n                        Log.e(TAG, \"onBindViewHolder: \"+info.getBuyPrice() );\n\n                        holder.layoutBuyPrice.setVisibility(View.VISIBLE);\n                        holder.txtBuyPrice.setText(activity.getResources().getString(R.string.rupee_icon) + \" \"+info.getBuyPrice().trim());\n\n                    } else {\n                        holder.layoutBuyPrice.setVisibility(View.GONE);\n                        holder.txtBuyPrice.setText(\"-\");\n                    }\n\n                   if (!TextUtils.isEmpty(info.getLtp())) {\n\n                       holder.layoutLtp.setVisibility(View.VISIBLE);\n                       holder.txtLtp.setText(activity.getResources().getString(R.string.rupee_icon) + \" \"+info.getLtp().trim());\n\n                   } else {\n                       holder.layoutLtp.setVisibility(View.GONE);\n                       holder.txtLtp.setText(\"-\");\n                   }\n\n                if (!TextUtils.isEmpty(info.getProfitLoss())) {\n\n                    holder.layoutProfitLoss.setVisibility(View.VISIBLE);\n                    holder.txtProfitLoss.setText(activity.getResources().getString(R.string.rupee_icon) + \" \"+info.getProfitLoss().trim());\n\n                } else {\n                    holder.layoutProfitLoss.setVisibility(View.GONE);\n                    holder.txtProfitLoss.setText(\"-\");\n                }\n\n                if (!TextUtils.isEmpty(info.getSoldQuantity())) {\n\n                    holder.layoutSoldQuantity.setVisibility(View.VISIBLE);\n                    holder.txtSoldQuantity.setText(info.getSoldQuantity().trim());\n\n                } else {\n\n                    holder.layoutSoldQuantity.setVisibility(View.GONE);\n                    holder.txtSoldQuantity.setText(\"-\");\n                }\n\n\n\n                    if(!TextUtils.isEmpty(info.getCreatedDateTime())){\n\n                        Log.e(TAG, \"date and time : \"+info.getCreatedDateTime() );\n                        holder.txtDateTime.setText(info.getCreatedDateTime().trim());\n                        holder.txtDateTime1.setText(info.getCreatedDateTime().trim());\n                    }\n\n                if(info.isExapanded()){\n\n                    holder.layoutMoreData.setVisibility(View.VISIBLE);\n                    holder.layoutShowLess.setVisibility(View.VISIBLE);\n                    holder.layoutShowMore.setVisibility(View.GONE);\n                }\n                else{\n                    holder.layoutMoreData.setVisibility(View.GONE);\n                    holder.layoutShowLess.setVisibility(View.GONE);\n                    holder.layoutShowMore.setVisibility(View.VISIBLE);\n                }\n\n\n                holder.layoutShowMore.setOnClickListener(new View.OnClickListener() {\n                        @Override\n                        public void onClick(View view) {\n\n                            if(!TextUtils.isEmpty(info.getQuantity()) || !TextUtils.isEmpty(info.getSegments()) ||\n                                    !TextUtils.isEmpty(info.getBuyDate()) || !TextUtils.isEmpty(info.getShareStatus()) ||\n                                    !TextUtils.isEmpty(info.getSoldDate()) || !TextUtils.isEmpty(info.getSoldPrice()) ||\n                                    !TextUtils.isEmpty(info.getBuyPrice()) ) {\n\n                                for(int i = 0;i<clientListFiltered.size();i++){\n                                    ClientInfo infoInner = clientListFiltered.get(i);\n                                    if(position == i){\n                                        infoInner.setExapanded(true);\n                                    }\n                                    else{\n                                        infoInner.setExapanded(false);\n                                    }\n\n\n                                }\n\n                                    notifyDataSetChanged();\n\n\n                            }\n\n                        }\n                    });\n\n\n                holder.layoutShowLess.setOnClickListener(new View.OnClickListener() {\n                    @Override\n                    public void onClick(View view) {\n\n                        for(int i = 0;i<clientListFiltered.size();i++){\n                            ClientInfo infoInner = clientListFiltered.get(i);\n                            if(infoInner.isExapanded()){\n                                infoInner.setExapanded(false);\n                                notifyDataSetChanged();\n                                break;\n\n                            }\n\n                        }\n\n\n                    }\n                });\n\n                holder.txtEdit.setOnClickListener(new View.OnClickListener() {\n                    @Override\n                    public void onClick(View view) {\n\n                        viewSelectionCallback.editData(info);\n\n                    }\n                });\n\n\n                holder.txtEdit1.setOnClickListener(new View.OnClickListener() {\n                    @Override\n                    public void onClick(View view) {\n\n                        viewSelectionCallback.editData(info);\n\n                    }\n                });\n\n                holder.txtDelete.setOnClickListener(new View.OnClickListener() {\n                    @Override\n                    public void onClick(View view) {\n\n                        Dialog alert = new Dialog(activity);\n                        LayoutInflater inflater = (LayoutInflater) activity.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n                        View alertDlgView = inflater.inflate(R.layout.dialog_validation, null);\n\n                        Button btnYes = (Button) alertDlgView.findViewById(R.id.btn_yes);\n                        Button btnNo  = (Button) alertDlgView.findViewById(R.id.btn_no);\n\n                        btnNo.setOnClickListener(v -> alert.dismiss());\n                        btnYes.setOnClickListener(new View.OnClickListener() {\n                            @Override\n                            public void onClick(View view) {\n                                clientInfoDataSource.open();\n\n                                clientInfoDataSource.deleteClientInfo(info);\n\n                                clientInfoDataSource.close();\n\n                                clientInfosList.remove(info);\n                                Log.e(TAG, \"onClick: \"+position );\n                                notifyItemRemoved(position);\n                                notifyItemRangeChanged(position, clientListFiltered.size());\n\n                                viewSelectionCallback.deleteData(position);\n\n                                alert.dismiss();\n                                alert.cancel();\n                                alert.closeOptionsMenu();\n\n                            }\n                        });\n\n                        alert.requestWindowFeature(Window.FEATURE_NO_TITLE);\n                        alert.setContentView(alertDlgView);\n                        alert.getWindow().setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\n                        alert.setCanceledOnTouchOutside(false);\n                        alert.show();\n\n\n                    }\n                });\n\n\n                holder.txtDelete1.setOnClickListener(new View.OnClickListener() {\n                    @Override\n                    public void onClick(View view) {\n\n                        Dialog alert = new Dialog(activity);\n                        LayoutInflater inflater = (LayoutInflater) activity.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n                        View alertDlgView = inflater.inflate(R.layout.dialog_validation, null);\n\n                        Button btnYes = (Button) alertDlgView.findViewById(R.id.btn_yes);\n                        Button btnNo  = (Button) alertDlgView.findViewById(R.id.btn_no);\n\n                        btnNo.setOnClickListener(v -> alert.dismiss());\n                        btnYes.setOnClickListener(new View.OnClickListener() {\n                            @Override\n                            public void onClick(View view) {\n                                clientInfoDataSource.open();\n\n                                clientInfoDataSource.deleteClientInfo(info);\n\n                                clientInfoDataSource.close();\n\n                                clientInfosList.remove(info);\n                                Log.e(TAG, \"onClick: \"+position );\n                                notifyItemRemoved(position);\n                                notifyItemRangeChanged(position, clientListFiltered.size());\n\n                                viewSelectionCallback.deleteData(position);\n\n                            }\n                        });\n\n                        alert.requestWindowFeature(Window.FEATURE_NO_TITLE);\n                        alert.setContentView(alertDlgView);\n                        alert.getWindow().setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\n                        alert.setCanceledOnTouchOutside(false);\n                        alert.show();\n\n\n                    }\n                });\n\n                Random rnd = new Random();\n                int color = Color.argb(255, rnd.nextInt(256), rnd.nextInt(256), rnd.nextInt(256));\n                holder.randomview.setBackgroundColor(color);\n\n\n            }\n\n\n        }\n    }\n\n\n    @RequiresApi(api = Build.VERSION_CODES.JELLY_BEAN_MR1)\n    private Bitmap loadBitmap(View backgroundView, View targetView) {\n        Rect backgroundBounds = new Rect();\n        backgroundView.getHitRect(backgroundBounds);\n        if (!targetView.getLocalVisibleRect(backgroundBounds)) {\n            // NONE of the imageView is within the visible window\n            return null;\n        }\n\n        Bitmap blurredBitmap = captureView(backgroundView);\n        //capture only the area covered by our target view\n        int[] loc = new int[2];\n        int[] bgLoc = new int[2];\n        backgroundView.getLocationInWindow(bgLoc);\n        targetView.getLocationInWindow(loc);\n        int height = targetView.getHeight();\n        int y = loc[1];\n        if (bgLoc[1] >= loc[1]) {\n            //view is going off the screen at the top\n            height -= (bgLoc[1] - loc[1]);\n            if (y < 0)\n                y = 0;\n        }\n        if (y + height > blurredBitmap.getHeight()) {\n            height = blurredBitmap.getHeight() - y;\n            Log.d(\"TAG\", \"Height = \" + height);\n            if (height <= 0) {\n                //below the screen\n                return null;\n            }\n        }\n        Matrix matrix = new Matrix();\n        //half the size of the cropped bitmap\n        //to increase performance, it will also\n        //increase the blur effect.\n        matrix.setScale(0.5f, 0.5f);\n        Bitmap bitmap = Bitmap.createBitmap(blurredBitmap,\n                (int) targetView.getX(),\n                y,\n                targetView.getMeasuredWidth(),\n                height,\n                matrix,\n                true);\n\n        return bitmap;\n        //If handling rounded corners yourself.\n        //Create rounded corners on the Bitmap\n        //keep in mind that our bitmap is half\n        //the size of the original view, setting\n        //it as the background will stretch it out\n        //so you will need to use a smaller value\n        //for the rounded corners than you would normally\n        //to achieve the correct look.\n        //ImageHelper.roundCorners(\n        //bitmap,\n        //getResources().getDimensionPixelOffset(R.dimen.rounded_corner),\n        //false);\n    }\n\n\n    @RequiresApi(api = Build.VERSION_CODES.JELLY_BEAN_MR1)\n    public Bitmap captureView(View view) {\n        if (mBlurredBitmap != null) {\n            return mBlurredBitmap;\n        }\n        //Find the view we are after\n        //Create a Bitmap with the same dimensions\n        mBlurredBitmap = Bitmap.createBitmap(view.getMeasuredWidth(),\n                view.getMeasuredHeight(),\n                Bitmap.Config.ARGB_4444); //reduce quality and remove opacity\n        //Draw the view inside the Bitmap\n        Canvas canvas = new Canvas(mBlurredBitmap);\n        view.draw(canvas);\n\n        //blur it\n        ImageHelper.blurBitmapWithRenderscript(rs, mBlurredBitmap);\n\n        //Make it frosty\n        Paint paint = new Paint();\n        paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN));\n        ColorFilter filter = new LightingColorFilter(0xFFFFFFFF, 0x00222222); // lighten\n        //ColorFilter filter = new LightingColorFilter(0xFF7F7F7F, 0x00000000);    // darken\n        paint.setColorFilter(filter);\n        canvas.drawBitmap(mBlurredBitmap, 0, 0, paint);\n\n        return mBlurredBitmap;\n    }\n\n\n\n    @Override\n    public int getItemCount() {\n        return clientListFiltered.size();\n    }\n\n    @Override\n    public ApplicationHelper getHelper() {\n        return ApplicationHelper.getInstance();\n    }\n\n    @Override\n    public Filter getFilter() {\n        return new Filter() {\n            @Override\n            protected FilterResults performFiltering(CharSequence charSequence) {\n                String charString = charSequence.toString();\n                if (charString.isEmpty()) {\n                    clientListFiltered = clientInfosList;\n                } else {\n                    List<ClientInfo> filteredList = new ArrayList<>();\n                    for (ClientInfo row : clientInfosList) {\n\n                        if (row.getClientName().toLowerCase().contains(charString.toLowerCase()) || row.getScriptName().toLowerCase().contains(charString.toLowerCase())) {\n                            filteredList.add(row);\n                        }\n                    }\n\n                    clientListFiltered = filteredList;\n\n                }\n\n                FilterResults filterResults = new FilterResults();\n                filterResults.values = clientListFiltered;\n                filterResults.count  = clientListFiltered.size();\n                return filterResults;\n            }\n\n            @Override\n            protected void publishResults(CharSequence charSequence, FilterResults filterResults) {\n\n                clientListFiltered = (ArrayList<ClientInfo>) filterResults.values;\n                if(filterResults.count == 0){\n\n                    ApplicationUtils.showToastSmall(activity,\"No Data Found As Per Required Search\");\n                }\n                notifyDataSetChanged();\n            }\n        };\n    }\n\n    public void removeItemFromDb(ClientInfo clientInfo, int i ) {\n\n        clientInfoDataSource.open();\n\n        clientInfoDataSource.deleteClientInfo(clientInfo);\n\n        clientInfoDataSource.close();\n\n      /*  clientInfosList.remove(i);\n        notifyItemRemoved(i);\n        notifyItemRangeChanged(i, clientInfosList.size());\n*/\n        viewSelectionCallback.deleteData(i);\n\n    }\n\n\n\n    public void removeItem(ClientInfo clientInfo, int i ) {\n\n        /*clientInfoDataSource.open();\n\n        clientInfoDataSource.deleteClientInfo(clientInfo);\n\n        clientInfoDataSource.close();\n*/\n        clientInfosList.remove(i);\n        notifyItemRemoved(i);\n        notifyItemRangeChanged(i, clientInfosList.size());\n\n        viewSelectionCallback.deleteData(i);\n\n    }\n\n    public void restoreItem(ClientInfo item, int position) {\n\n        /*clientInfoDataSource.open();\n\n        clientInfoDataSource.createClientInfo(item);\n\n        clientInfoDataSource.close();\n*/\n        clientInfosList.add(position, item);\n        notifyItemInserted(position);\n        notifyItemRangeChanged(position, clientInfosList.size());\n\n        viewSelectionCallback.deleteData(position);\n\n\n    }\n\n    public class ListItemViewHolder extends RecyclerView.ViewHolder {\n\n        //@formatter:off\n        @BindView(R.id.card)               CardView       card;\n        @BindView(R.id.layout_item)        LinearLayout   layoutItem;\n        @BindView(R.id.layout_more_data)   LinearLayout   layoutMoreData;\n        @BindView(R.id.layout_show_less)   LinearLayout   layoutShowLess;\n        @BindView(R.id.layout_show_more)   LinearLayout   layoutShowMore;\n        @BindView(R.id.layout_quantity)    LinearLayout   layoutQuantity;\n        @BindView(R.id.layout_segments)    LinearLayout   layoutSegments;\n        @BindView(R.id.layout_buy_date)    LinearLayout   layoutBuyDate;\n        @BindView(R.id.layout_share_status)LinearLayout   layoutShareStatus;\n        @BindView(R.id.layout_sold_date)   LinearLayout   layoutSolddate;\n        @BindView(R.id.layout_sold_price)  LinearLayout   layoutSoldPrice;\n        @BindView(R.id.layout_buy_price)   LinearLayout   layoutBuyPrice;\n        @BindView(R.id.layout_profit_loss) LinearLayout   layoutProfitLoss;\n        @BindView(R.id.layout_ltp)         LinearLayout   layoutLtp;\n        @BindView(R.id.layout_sold_quantity)LinearLayout  layoutSoldQuantity;\n\n        @BindView(R.id.txt_client_name)    TextView       txtClientName;\n        @BindView(R.id.txt_script_name)    TextView       txtScriptName;\n        @BindView(R.id.txt_quantity)       TextView       txtQuantity;\n        @BindView(R.id.txt_segments)       TextView       txtSegments;\n        @BindView(R.id.txt_buy_date)       TextView       txtBuyDate;\n        @BindView(R.id.txt_share_status)   TextView       txtShareStatus;\n        @BindView(R.id.txt_sold_date)      TextView       txtSoldDate;\n        @BindView(R.id.txt_sold_price)     TextView       txtSoldPrice;\n        @BindView(R.id.txt_buy_price)      TextView       txtBuyPrice;\n        @BindView(R.id.txt_show_more)      TextView       txtShowMore;\n        @BindView(R.id.txt_edit)           TextView       txtEdit;\n        @BindView(R.id.txt_edit1)          TextView       txtEdit1;\n        @BindView(R.id.txt_delete)         TextView       txtDelete;\n        @BindView(R.id.txt_delete1)        TextView       txtDelete1;\n        @BindView(R.id.view_color)         View           randomview;\n        @BindView(R.id.txt_date_time)      TextView       txtDateTime;\n        @BindView(R.id.txt_date_time1)     TextView       txtDateTime1;\n        @BindView(R.id.txt_ltp)            TextView       txtLtp;\n        @BindView(R.id.txt_profit_loss)    TextView       txtProfitLoss;\n        @BindView(R.id.txt_sold_quantity)  TextView       txtSoldQuantity;\n        @BindView(R.id.view_background)    public RelativeLayout viewBackground;\n        @BindView(R.id.view_foreground)    public RelativeLayout viewForeground;\n        @BindView(R.id.img_bus)            public ImageView imgBus;\n\n\n        //@formatter:on\n\n        public ListItemViewHolder(View view) {\n            super(view);\n            ButterKnife.bind(this, view);\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/demo/app/com/app2/adapters/AllItemsAdapter.java	(revision 03a4d74868f446cd8512d5db86d56780d91d565f)
+++ app/src/main/java/demo/app/com/app2/adapters/AllItemsAdapter.java	(revision )
@@ -94,6 +94,7 @@
     @Override
     public void onBindViewHolder(AllItemsAdapter.ListItemViewHolder holder, int position) {
 
+
         if (clientListFiltered!= null && clientListFiltered.size() > 0
                 && ObjectUtils.indexExists(clientListFiltered, position)) {
 
Index: app/src/main/java/demo/app/com/app2/utils/ApplicationUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package demo.app.com.app2.utils;\n\nimport android.annotation.SuppressLint;\nimport android.app.AlarmManager;\nimport android.app.PendingIntent;\nimport android.content.Context;\nimport android.content.DialogInterface;\nimport android.content.Intent;\nimport android.net.ConnectivityManager;\nimport android.net.NetworkInfo;\nimport android.os.Environment;\nimport android.support.v4.app.Fragment;\nimport android.support.v7.app.AlertDialog;\nimport android.text.Editable;\nimport android.text.TextWatcher;\nimport android.util.Log;\nimport android.view.Gravity;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.inputmethod.InputMethodManager;\nimport android.widget.DatePicker;\nimport android.widget.EditText;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport com.google.gson.Gson;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.nio.channels.FileChannel;\nimport java.text.SimpleDateFormat;\nimport java.util.Calendar;\nimport java.util.Date;\n\nimport demo.app.com.app2.AppContext;\nimport demo.app.com.app2.BuildConfig;\nimport demo.app.com.app2.R;\nimport demo.app.com.app2.constants.DatabaseConstants;\nimport demo.app.com.app2.receivers.AlarmReceiver;\n\nimport static demo.app.com.app2.constants.AppConstants.APP_CRASH_REPORT_FILE_NAME;\n\n/**\n * Created by root on 23/12/17.\n */\n\npublic class ApplicationUtils {\n\n    private static final String TAG = ApplicationUtils.class.getSimpleName();\n\n    public static boolean isFragmentVisible(Fragment fragment) {\n        if (fragment.isVisible()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    public static void hideKeypad(Context context, View view) {\n\n        InputMethodManager imm = (InputMethodManager)\n                context.getSystemService(Context.INPUT_METHOD_SERVICE);\n        if (imm != null && view != null) {\n            //   imm.toggleSoftInput(0, InputMethodManager.HIDE_IMPLICIT_ONLY);\n            imm.hideSoftInputFromWindow(view.getWindowToken(), 0);\n        }\n    }\n\n    public static Toast showToast(Context context, String message) {\n        Toast toast = Toast.makeText(context, message, Toast.LENGTH_LONG);\n        toast.setGravity(Gravity.CENTER, 0, 200);\n        toast.show();\n        return toast;\n    }\n\n    public static Toast showToastSmall(Context context, String message) {\n        Toast toast = Toast.makeText(context, message, Toast.LENGTH_SHORT);\n        toast.setGravity(Gravity.CENTER, 0, 200);\n        toast.show();\n        return toast;\n    }\n\n    public static void showDateDialog(Context context, final EditText editText) {\n\n        final android.app.AlertDialog.Builder alert = new android.app.AlertDialog.Builder(context);\n        alert.setTitle(\"Select Date and Time\");\n\n        LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n        View alertDlgView = inflater.inflate(R.layout.dialog_date, null);\n        final DatePicker datePicker = (DatePicker) alertDlgView.findViewById(R.id.datePicker);\n\n        alert.setView(alertDlgView);\n        alert.setCancelable(false);\n\n        Calendar c = Calendar.getInstance();\n        int year = c.get(Calendar.YEAR);\n        int month = c.get(Calendar.MONTH);\n        int day = c.get(Calendar.DAY_OF_MONTH);\n\n        datePicker.init(year, month, day, null);\n        //datePicker.setMinDate(c.getTimeInMillis() - 1000);\n\n        alert.setPositiveButton(R.string.lbl_ok,\n                new DialogInterface.OnClickListener() {\n                    @SuppressLint(\"SimpleDateFormat\")\n                    public void onClick(DialogInterface dialog, int whichButton) {\n\n\n                        int day = datePicker.getDayOfMonth();\n                        int month = datePicker.getMonth();\n                        int year = datePicker.getYear();\n\n                        Calendar calendar = Calendar.getInstance();\n                        calendar.set(year, month, day);\n                        Date date = calendar.getTime();\n                        SimpleDateFormat dateFormat = new SimpleDateFormat(\"dd/MM/yyyy\");\n                        String strdate = dateFormat.format(date);\n\n                        editText.setText(strdate);\n\n                    }\n                });\n\n        alert.setNegativeButton(R.string.lbl_cancel,\n                new DialogInterface.OnClickListener() {\n\n                    public void onClick(DialogInterface dialog, int which) {\n                        editText.setText(\"\");\n                        dialog.dismiss();\n                        return;\n                    }\n                });\n        alert.show();\n    }\n\n    public static void validatingDateSelection(EditText editText,Context context){\n\n        editText.addTextChangedListener(new TextWatcher() {\n\n            private String current = \"\";\n            private String ddmmyyyy = \"DDMMYYYY\";\n            private Calendar cal = Calendar.getInstance();\n            private String dob;\n            private String valueText;\n\n            /* private int day = 0;\n             private int mon = 0;\n             private int year = 0;*/\n            @Override\n            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {\n\n            }\n\n            @Override\n            public void onTextChanged(CharSequence s, int i, int i1, int i2) {\n\n                if (!s.toString().equals(current)) {\n                    String clean = s.toString().replaceAll(\"[^\\\\d.]\", \"\");\n                    String cleanC = current.replaceAll(\"[^\\\\d.]\", \"\");\n\n                    int cl = clean.length();\n                    int sel = cl;\n                    for (int in = 2; in <= cl && in < 6; in += 2) {\n                        sel++;\n                    }\n                    //Fix for pressing delete next to a forward slash\n                    if (clean.equals(cleanC)) sel--;\n\n                    if (clean.length() < 8){\n                        clean = clean + ddmmyyyy.substring(clean.length());\n                    }else{\n                        //This part makes sure that when we finish entering numbers\n                        //the date is correct, fixing it otherwise\n                        try {\n                            int day = Integer.parseInt(clean.substring(0, 2));\n                            int mon = Integer.parseInt(clean.substring(2, 4));\n                            int year = Integer.parseInt(clean.substring(4, 8));\n\n                            if (mon > 12) mon = 12;\n                            cal.set(Calendar.MONTH, mon - 1);\n                            year = (year < 1900) ? 1900 : (year > 2100) ? 2100 : year;\n                            cal.set(Calendar.YEAR, year);\n\n                            // ^ first set year for the line below to work correctly\n                            //with leap years - otherwise, date e.g. 29/02/2012\n                            //would be automatically corrected to 28/02/2012\n\n                            day = (day > cal.getActualMaximum(Calendar.DATE))? cal.getActualMaximum(Calendar.DATE):day;\n                            clean = String.format(\"%02d%02d%02d\",day, mon, year);\n                        }catch (Exception e){\n                            e.printStackTrace();\n                        }\n                    }\n\n                    clean = String.format(\"%s/%s/%s\", clean.substring(0, 2),\n                            clean.substring(2, 4),\n                            clean.substring(4, 8));\n\n                    sel = sel < 0 ? 0 : sel;\n                    current = clean;\n                    editText.setText(current);\n                    editText.setSelection(sel < current.length() ? sel : current.length());\n\n                }\n\n            }\n\n            @Override\n            public void afterTextChanged(Editable editable) {\n\n            }\n        });\n    }\n\n    public static void showToast(String message, EditText editText, boolean warning) {\n\n        if (warning == true) {\n            editText.setCompoundDrawablesWithIntrinsicBounds(0, 0, R.drawable.ic_red_cross, 0);\n\n            Toast toast = Toast.makeText(AppContext.getInstance(), message, Toast.LENGTH_LONG);\n            toast.setGravity(Gravity.TOP, 0, 200);\n            toast.show();\n        } else {\n            editText.setCompoundDrawablesWithIntrinsicBounds(0, 0, R.drawable.ic_green_check, 0);\n        }\n\n\n    }\n\n    public static String exportDB(Context context){\n        File sd = Environment.getExternalStorageDirectory();\n        File data = Environment.getDataDirectory();\n        FileChannel source=null;\n        FileChannel destination=null;\n        String currentDBPath = \"/data/\" + BuildConfig.APPLICATION_ID + \"/databases/\"+ DatabaseConstants.DATABASE_NAME_RUNTIME;\n        String backupDBPath = DatabaseConstants.DATABASE_NAME_RUNTIME;\n        File currentDB = new File(data, currentDBPath);\n        File backupDB = new File(sd, backupDBPath);\n        try {\n            source = new FileInputStream(currentDB).getChannel();\n            destination = new FileOutputStream(backupDB).getChannel();\n            destination.transferFrom(source, 0, source.size());\n            source.close();\n            destination.close();\n            //Toast.makeText(context, \"DB Exported!\", Toast.LENGTH_LONG).show();\n            Log.e(TAG, \"exportDB: exported \");\n        } catch(IOException e) {\n            e.printStackTrace();\n        }\n\n        return backupDB.getAbsolutePath();\n    }\n\n    public static boolean isOnline(Context context) {\n\n        ConnectivityManager cm = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);\n        NetworkInfo netInfo = cm.getActiveNetworkInfo();\n        //should check null because in airplane mode it will be null\n        return (netInfo != null && netInfo.isConnected());\n    }\n\n    public static String toJson(Object object) {\n        Gson gson = new Gson();\n        String json = gson.toJson(object);\n        return json;\n    }\n\n    public static boolean isConnected(Context context) {\n        int connectivityType = getConnectivityType(context);\n        if (connectivityType == -1)\n            return false;\n        else\n            return true;\n    }\n\n    public static int getConnectivityType(Context context) {\n        ConnectivityManager cm = (ConnectivityManager) context\n                .getSystemService(Context.CONNECTIVITY_SERVICE);\n\n        NetworkInfo networkInfo = cm.getActiveNetworkInfo();\n        if (null != networkInfo && networkInfo.isConnected()) {\n            return networkInfo.getType();\n        }\n        return -1;\n    }\n\n    public static void scheduleAlarm(Context context) {\n\n        Intent intent = new Intent(context, AlarmReceiver.class);\n        boolean alarmRunning = (PendingIntent.getBroadcast(context, AlarmReceiver.REQUEST_CODE,\n                intent, PendingIntent.FLAG_UPDATE_CURRENT)!= null);\n        final PendingIntent pIntent = PendingIntent.getBroadcast(context, AlarmReceiver.REQUEST_CODE,\n                intent, PendingIntent.FLAG_UPDATE_CURRENT);\n        long firstMillis = System.currentTimeMillis();\n        AlarmManager alarm = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);\n        alarm.setRepeating(AlarmManager.RTC_WAKEUP, firstMillis,\n                300000, pIntent);\n\n    }\n\n    public static String getDateTime(){\n\n        Calendar c = Calendar.getInstance();\n\n        SimpleDateFormat df = new SimpleDateFormat(\"dd-MM-yyyy hh:mm:ss a\");\n        String formattedDate = df.format(c.getTime());\n        Log.e(TAG, \"getDateTime: \"+formattedDate );\n        return formattedDate;\n\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/demo/app/com/app2/utils/ApplicationUtils.java	(revision 03a4d74868f446cd8512d5db86d56780d91d565f)
+++ app/src/main/java/demo/app/com/app2/utils/ApplicationUtils.java	(revision )
@@ -6,9 +6,14 @@
 import android.content.Context;
 import android.content.DialogInterface;
 import android.content.Intent;
+import android.graphics.Bitmap;
 import android.net.ConnectivityManager;
 import android.net.NetworkInfo;
 import android.os.Environment;
+import android.renderscript.Allocation;
+import android.renderscript.Element;
+import android.renderscript.RenderScript;
+import android.renderscript.ScriptIntrinsicBlur;
 import android.support.v4.app.Fragment;
 import android.support.v7.app.AlertDialog;
 import android.text.Editable;
@@ -311,4 +316,23 @@
 
     }
 
+    public static void blurBitmapWithRenderscript(
+            RenderScript rs, Bitmap bitmap2) {
+        // this will blur the bitmapOriginal with a radius of 25
+        // and save it in bitmapOriginal
+        // use this constructor for best performance, because it uses
+        // USAGE_SHARED mode which reuses memory
+        final Allocation input =
+                Allocation.createFromBitmap(rs, bitmap2);
+        final Allocation output = Allocation.createTyped(rs,
+                input.getType());
+        final ScriptIntrinsicBlur script =
+                ScriptIntrinsicBlur.create(rs, Element.U8_4(rs));
+        // must be >0 and <= 25
+        script.setRadius(25f);
+        script.setInput(input);
+        script.forEach(output);
+        output.copyTo(bitmap2);
+    }
+
 }
Index: app/src/main/res/layout/adapter_all_items.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:card_view=\"http://schemas.android.com/tools\">\n\n    <android.support.v7.widget.CardView\n        android:id=\"@+id/card\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginLeft=\"@dimen/_5sdp\"\n        android:layout_marginRight=\"@dimen/_5sdp\"\n        android:layout_marginBottom=\"@dimen/_5sdp\"\n        android:layout_marginTop=\"@dimen/_5sdp\"\n        android:background=\"@android:color/transparent\"\n        app:contentScrim=\"@android:color/transparent\"\n        android:foreground=\"?android:attr/selectableItemBackground\"\n        app:cardCornerRadius=\"@dimen/_5sdp\">\n\n        <FrameLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            >\n\n            <ImageView\n                android:id=\"@+id/img_bus\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:src=\"@drawable/business\"\n                android:visibility=\"gone\"/>\n\n            <RelativeLayout\n                android:id=\"@+id/view_background\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"match_parent\"\n                android:background=\"@drawable/custom_border\">\n\n                <ImageView\n                    android:id=\"@+id/delete_icon\"\n                    android:layout_width=\"35dp\"\n                    android:layout_height=\"35dp\"\n                    android:layout_alignParentRight=\"true\"\n                    android:layout_centerVertical=\"true\"\n                    android:layout_marginRight=\"10dp\"\n                    android:src=\"@drawable/ic_action_delete\" />\n\n                <TextView\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_centerVertical=\"true\"\n                    android:layout_marginRight=\"10dp\"\n                    android:layout_toLeftOf=\"@id/delete_icon\"\n                    android:text=\"Delete\"\n                    android:textColor=\"#fff\"\n                    android:textSize=\"14dp\" />\n\n            </RelativeLayout>\n\n            <RelativeLayout\n                android:id=\"@+id/view_foreground\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\">\n\n        <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:orientation=\"horizontal\">\n\n            <View\n                android:id=\"@+id/view_color\"\n                android:layout_width=\"7dp\"\n                android:layout_height=\"match_parent\"/>\n\n            <LinearLayout\n                android:id=\"@+id/layout_item\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:orientation=\"vertical\"\n                android:background=\"@color/blue_grey_50\"\n                android:padding=\"@dimen/_5sdp\">\n\n                <LinearLayout\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:orientation=\"horizontal\">\n\n                    <TextView\n                        android:layout_width=\"0dp\"\n                        android:layout_weight=\"0.5\"\n                        android:layout_height=\"wrap_content\"\n                        android:padding=\"@dimen/_5sdp\"\n                        android:textStyle=\"bold\"\n                        android:textColor=\"@color/black\"\n                        android:text=\"Client Name \"/>\n\n                    <TextView\n                        android:id=\"@+id/txt_client_name\"\n                        android:layout_width=\"0dp\"\n                        android:layout_weight=\"1\"\n                        android:textColor=\"@color/text_color\"\n                        android:textStyle=\"italic\"\n                        android:layout_height=\"wrap_content\"\n                        android:padding=\"@dimen/_5sdp\"/>\n\n                </LinearLayout>\n\n                <LinearLayout\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:orientation=\"horizontal\">\n\n                    <TextView\n                        android:layout_width=\"0dp\"\n                        android:layout_weight=\"0.5\"\n                        android:textStyle=\"bold\"\n                        android:layout_height=\"wrap_content\"\n                        android:padding=\"@dimen/_5sdp\"\n                        android:textColor=\"@color/black\"\n                        android:text=\"Script Name\"/>\n\n                    <TextView\n                        android:id=\"@+id/txt_script_name\"\n                        android:layout_width=\"0dp\"\n                        android:layout_weight=\"1\"\n                        android:textStyle=\"italic\"\n                        android:textColor=\"@color/text_color\"\n                        android:layout_height=\"wrap_content\"\n                        android:padding=\"@dimen/_5sdp\"/>\n\n                </LinearLayout>\n\n                <LinearLayout\n                    android:id=\"@+id/layout_more_data\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:orientation=\"vertical\"\n                    android:visibility=\"gone\">\n\n                    <LinearLayout\n                        android:id=\"@+id/layout_quantity\"\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"wrap_content\"\n                        android:orientation=\"horizontal\">\n\n                        <TextView\n                            android:layout_width=\"0dp\"\n                            android:layout_weight=\"0.5\"\n                            android:textStyle=\"bold\"\n                            android:layout_height=\"wrap_content\"\n                            android:padding=\"@dimen/_5sdp\"\n                            android:textColor=\"@color/black\"\n                            android:text=\"Quantity\"/>\n\n                        <TextView\n                            android:id=\"@+id/txt_quantity\"\n                            android:layout_width=\"0dp\"\n                            android:layout_weight=\"1\"\n                            android:textStyle=\"italic\"\n                            android:textColor=\"@color/text_color\"\n                            android:layout_height=\"wrap_content\"\n                            android:padding=\"@dimen/_5sdp\"/>\n\n                    </LinearLayout>\n\n                    <LinearLayout\n                        android:id=\"@+id/layout_segments\"\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"wrap_content\"\n                        android:orientation=\"horizontal\">\n\n                        <TextView\n                            android:layout_width=\"0dp\"\n                            android:layout_weight=\"0.5\"\n                            android:textStyle=\"bold\"\n                            android:layout_height=\"wrap_content\"\n                            android:padding=\"@dimen/_5sdp\"\n                            android:textColor=\"@color/black\"\n                            android:text=\"Segments\"/>\n\n                        <TextView\n                            android:id=\"@+id/txt_segments\"\n                            android:layout_width=\"0dp\"\n                            android:layout_weight=\"1\"\n                            android:textStyle=\"italic\"\n                            android:textColor=\"@color/text_color\"\n                            android:layout_height=\"wrap_content\"\n                            android:padding=\"@dimen/_5sdp\"/>\n\n                    </LinearLayout>\n\n                    <LinearLayout\n                        android:id=\"@+id/layout_buy_date\"\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"wrap_content\"\n                        android:orientation=\"horizontal\">\n\n                        <TextView\n                            android:layout_width=\"0dp\"\n                            android:layout_weight=\"0.5\"\n                            android:textStyle=\"bold\"\n                            android:layout_height=\"wrap_content\"\n                            android:padding=\"@dimen/_5sdp\"\n                            android:textColor=\"@color/black\"\n                            android:text=\"Buy Date\"/>\n\n                        <TextView\n                            android:id=\"@+id/txt_buy_date\"\n                            android:layout_width=\"0dp\"\n                            android:layout_weight=\"1\"\n                            android:textStyle=\"italic\"\n                            android:textColor=\"@color/text_color\"\n                            android:layout_height=\"wrap_content\"\n                            android:padding=\"@dimen/_5sdp\"/>\n\n                    </LinearLayout>\n\n                    <LinearLayout\n                        android:id=\"@+id/layout_share_status\"\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"wrap_content\"\n                        android:orientation=\"horizontal\">\n\n                        <TextView\n                            android:layout_width=\"0dp\"\n                            android:layout_weight=\"0.5\"\n                            android:textStyle=\"bold\"\n                            android:layout_height=\"wrap_content\"\n                            android:padding=\"@dimen/_5sdp\"\n                            android:textColor=\"@color/black\"\n                            android:text=\"Share Status\"/>\n\n                        <TextView\n                            android:id=\"@+id/txt_share_status\"\n                            android:layout_width=\"0dp\"\n                            android:layout_weight=\"1\"\n                            android:textStyle=\"italic\"\n                            android:textColor=\"@color/text_color\"\n                            android:layout_height=\"wrap_content\"\n                            android:padding=\"@dimen/_5sdp\"/>\n\n                    </LinearLayout>\n\n                    <LinearLayout\n                        android:id=\"@+id/layout_sold_date\"\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"wrap_content\"\n                        android:orientation=\"horizontal\">\n\n                        <TextView\n                            android:layout_width=\"0dp\"\n                            android:layout_weight=\"0.5\"\n                            android:textStyle=\"bold\"\n                            android:layout_height=\"wrap_content\"\n                            android:padding=\"@dimen/_5sdp\"\n                            android:textColor=\"@color/black\"\n                            android:text=\"Sold Date\"/>\n\n                        <TextView\n                            android:id=\"@+id/txt_sold_date\"\n                            android:layout_width=\"0dp\"\n                            android:layout_weight=\"1\"\n                            android:textStyle=\"italic\"\n                            android:textColor=\"@color/text_color\"\n                            android:layout_height=\"wrap_content\"\n                            android:padding=\"@dimen/_5sdp\"/>\n\n                    </LinearLayout>\n\n                    <LinearLayout\n                        android:id=\"@+id/layout_sold_price\"\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"wrap_content\"\n                        android:orientation=\"horizontal\">\n\n                        <TextView\n                            android:layout_width=\"0dp\"\n                            android:layout_weight=\"0.5\"\n                            android:textStyle=\"bold\"\n                            android:layout_height=\"wrap_content\"\n                            android:padding=\"@dimen/_5sdp\"\n                            android:textColor=\"@color/black\"\n                            android:text=\"Sold Price\"/>\n\n                        <TextView\n                            android:id=\"@+id/txt_sold_price\"\n                            android:layout_width=\"0dp\"\n                            android:layout_weight=\"1\"\n                            android:textStyle=\"italic\"\n                            android:textColor=\"@color/text_color\"\n                            android:layout_height=\"wrap_content\"\n                            android:padding=\"@dimen/_5sdp\"/>\n\n                    </LinearLayout>\n\n                    <LinearLayout\n                        android:id=\"@+id/layout_buy_price\"\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"wrap_content\"\n                        android:orientation=\"horizontal\">\n\n                        <TextView\n                            android:layout_width=\"0dp\"\n                            android:layout_weight=\"0.5\"\n                            android:textStyle=\"bold\"\n                            android:layout_height=\"wrap_content\"\n                            android:padding=\"@dimen/_5sdp\"\n                            android:textColor=\"@color/black\"\n                            android:text=\"Buy Price\"/>\n\n                        <TextView\n                            android:id=\"@+id/txt_buy_price\"\n                            android:layout_width=\"0dp\"\n                            android:layout_weight=\"1\"\n                            android:textStyle=\"italic\"\n                            android:textColor=\"@color/text_color\"\n                            android:layout_height=\"wrap_content\"\n                            android:padding=\"@dimen/_5sdp\"/>\n\n                    </LinearLayout>\n\n                    <LinearLayout\n                        android:id=\"@+id/layout_ltp\"\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"wrap_content\"\n                        android:orientation=\"horizontal\">\n\n                        <TextView\n                            android:layout_width=\"0dp\"\n                            android:layout_weight=\"0.5\"\n                            android:textStyle=\"bold\"\n                            android:layout_height=\"wrap_content\"\n                            android:padding=\"@dimen/_5sdp\"\n                            android:textColor=\"@color/black\"\n                            android:text=\"LTP\"/>\n\n                        <TextView\n                            android:id=\"@+id/txt_ltp\"\n                            android:layout_width=\"0dp\"\n                            android:layout_weight=\"1\"\n                            android:textStyle=\"italic\"\n                            android:textColor=\"@color/text_color\"\n                            android:layout_height=\"wrap_content\"\n                            android:padding=\"@dimen/_5sdp\"/>\n\n                    </LinearLayout>\n\n                    <LinearLayout\n                        android:id=\"@+id/layout_profit_loss\"\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"wrap_content\"\n                        android:orientation=\"horizontal\">\n\n                        <TextView\n                            android:layout_width=\"0dp\"\n                            android:layout_weight=\"0.5\"\n                            android:textStyle=\"bold\"\n                            android:layout_height=\"wrap_content\"\n                            android:padding=\"@dimen/_5sdp\"\n                            android:textColor=\"@color/black\"\n                            android:text=\"Profit/Loss\"/>\n\n                        <TextView\n                            android:id=\"@+id/txt_profit_loss\"\n                            android:layout_width=\"0dp\"\n                            android:layout_weight=\"1\"\n                            android:textStyle=\"italic\"\n                            android:textColor=\"@color/text_color\"\n                            android:layout_height=\"wrap_content\"\n                            android:padding=\"@dimen/_5sdp\"/>\n\n                    </LinearLayout>\n\n                    <LinearLayout\n                        android:id=\"@+id/layout_sold_quantity\"\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"wrap_content\"\n                        android:orientation=\"horizontal\">\n\n                        <TextView\n                            android:layout_width=\"0dp\"\n                            android:layout_weight=\"0.5\"\n                            android:textStyle=\"bold\"\n                            android:layout_height=\"wrap_content\"\n                            android:padding=\"@dimen/_5sdp\"\n                            android:textColor=\"@color/black\"\n                            android:text=\"Sold Quantity\"/>\n\n                        <TextView\n                            android:id=\"@+id/txt_sold_quantity\"\n                            android:layout_width=\"0dp\"\n                            android:layout_weight=\"1\"\n                            android:textStyle=\"italic\"\n                            android:textColor=\"@color/text_color\"\n                            android:layout_height=\"wrap_content\"\n                            android:padding=\"@dimen/_5sdp\"/>\n\n                    </LinearLayout>\n\n                </LinearLayout>\n\n                <LinearLayout\n                    android:id=\"@+id/layout_show_more\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:orientation=\"horizontal\"\n                    android:gravity=\"right\"\n                    android:layout_gravity=\"right\">\n\n                    <TextView\n                        android:id=\"@+id/txt_date_time\"\n                        android:layout_width=\"wrap_content\"\n                        android:layout_height=\"wrap_content\"\n                        android:padding=\"@dimen/_5sdp\"\n                        android:textSize=\"10sp\"\n                        android:paddingRight=\"@dimen/_10sdp\"\n                        android:textColor=\"@color/blue_900\" />\n\n                    <TextView\n                        android:id=\"@+id/txt_delete\"\n                        android:layout_width=\"wrap_content\"\n                        android:layout_height=\"wrap_content\"\n                        android:padding=\"@dimen/_10sdp\"\n                        android:textColor=\"#FF0000\"\n                        android:textSize=\"10sp\"\n                        android:paddingRight=\"@dimen/_10sdp\"\n                        android:text=\"Delete \"/>\n\n\n                    <TextView\n                        android:id=\"@+id/txt_edit\"\n                        android:layout_width=\"wrap_content\"\n                        android:layout_height=\"wrap_content\"\n                        android:padding=\"@dimen/_10sdp\"\n                        android:textColor=\"@color/blue_900\"\n                        android:textSize=\"10sp\"\n                        android:paddingRight=\"@dimen/_10sdp\"\n                        android:text=\"Edit \"/>\n\n\n\n                    <TextView\n                        android:id=\"@+id/txt_show_more\"\n                        android:layout_width=\"wrap_content\"\n                        android:layout_height=\"wrap_content\"\n                        android:padding=\"@dimen/_10sdp\"\n                        android:textColor=\"@color/blue_900\"\n                        android:textSize=\"10sp\"\n                        android:paddingRight=\"@dimen/_10sdp\"\n                        android:text=\"Show More \"/>\n\n\n                </LinearLayout>\n\n                <LinearLayout\n                    android:id=\"@+id/layout_show_less\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:orientation=\"horizontal\"\n                    android:gravity=\"right\"\n                    android:layout_gravity=\"right\"\n                    android:visibility=\"gone\">\n\n                    <TextView\n                        android:id=\"@+id/txt_date_time1\"\n                        android:layout_width=\"wrap_content\"\n                        android:layout_height=\"wrap_content\"\n                        android:padding=\"@dimen/_5sdp\"\n                        android:textSize=\"10sp\"\n                        android:paddingRight=\"@dimen/_10sdp\"\n                        android:textColor=\"@color/blue_900\" />\n\n\n                    <TextView\n                        android:id=\"@+id/txt_delete1\"\n                        android:layout_width=\"wrap_content\"\n                        android:layout_height=\"wrap_content\"\n                        android:padding=\"@dimen/_10sdp\"\n                        android:textColor=\"#FF0000\"\n                        android:textSize=\"10sp\"\n                        android:paddingRight=\"@dimen/_10sdp\"\n                        android:text=\"Delete \"/>\n\n                    <TextView\n                        android:id=\"@+id/txt_edit1\"\n                        android:layout_width=\"wrap_content\"\n                        android:layout_height=\"wrap_content\"\n                        android:padding=\"@dimen/_10sdp\"\n                        android:textColor=\"@color/blue_900\"\n                        android:textSize=\"10sp\"\n                        android:paddingRight=\"@dimen/_10sdp\"\n                        android:text=\"Edit \"/>\n\n\n\n                    <TextView\n                        android:id=\"@+id/txt_show_less\"\n                        android:layout_width=\"wrap_content\"\n                        android:layout_height=\"wrap_content\"\n                        android:padding=\"@dimen/_10sdp\"\n                        android:textColor=\"@color/blue_900\"\n                        android:textSize=\"10sp\"\n                        android:paddingRight=\"@dimen/_10sdp\"\n                        android:text=\"Show less \"/>\n\n                </LinearLayout>\n\n            </LinearLayout>\n\n        </LinearLayout>\n\n\n            </RelativeLayout>\n\n\n        </FrameLayout>\n\n\n    </android.support.v7.widget.CardView>\n\n\n</LinearLayout>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/adapter_all_items.xml	(revision 03a4d74868f446cd8512d5db86d56780d91d565f)
+++ app/src/main/res/layout/adapter_all_items.xml	(revision )
@@ -13,8 +13,6 @@
         android:layout_marginRight="@dimen/_5sdp"
         android:layout_marginBottom="@dimen/_5sdp"
         android:layout_marginTop="@dimen/_5sdp"
-        android:background="@android:color/transparent"
-        app:contentScrim="@android:color/transparent"
         android:foreground="?android:attr/selectableItemBackground"
         app:cardCornerRadius="@dimen/_5sdp">
 
@@ -34,7 +32,7 @@
                 android:id="@+id/view_background"
                 android:layout_width="match_parent"
                 android:layout_height="match_parent"
-                android:background="@drawable/custom_border">
+                android:background="#ff0000">
 
                 <ImageView
                     android:id="@+id/delete_icon"
